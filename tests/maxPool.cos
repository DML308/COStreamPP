composite Main() {
    stream<double x> In, Out, Y;
    (In, Y) = Start() {
        int i = 0;
        work {
            for(i = 0; i < 25; i++) {
                In[i].x = 0;
            }
            for(i = 0; i < 5; i++) {
                Y[i].x = 1;
            } 
        }
        window {
            In tumbling(25);
            Y tumbling(5);
        }
    };
    Out = sequential (In, Y) ((5, 5, 1), 0.0001, "crossEntropy", 'gaussRandom') {
        // filters, kernel_size, strides, padding, use_bias  
        add Conv2D(3, (2, 2), (1, 1), (0, 0), false);
        add MaxPooling2D(2);
        add Dense(5);
    };
    sink(Out) {
        work {
            print(Out[0].x);
        }
        window{
            Out sliding(25, 25);
        }
    };
}